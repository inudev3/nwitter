{"version":3,"sources":["fBase.js","components/Authfrom.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Authform","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","required","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorID","collection","add","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","finishedevent","result","readAsDataURL","opacity","backgroundImage","document","querySelector","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","setMyNweets","DisplayName","newDisplayName","setNewDisplayName","onLogOutClick","signOut","push","getMyNweets","where","get","updateProfile","Router","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dbacd78.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey:process.env.REACT_APP_API_KEY,\n    authDomain:process.env.REACT_APP_AUTH_DOMAIN,\n    projectId:process.env.REACT_APP_PROJECT_ID,\n    storageBucket:process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId:process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID, //just for github\n}; //create-react-app에서 env변수들은 REACT_APP으로 시작해야함 규칙!\n  \nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from 'fBase';\nimport React, { useState } from 'react';\n\nconst inputStyles = {};\n\n\nconst Authform = () => {\n    const [email, setEmail] = useState(\"\"); //aware of the email and password whenever the user types\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n\n    const onChange = event => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        }else if (name === \"password\") {\n            setPassword(value);\n        }\n      \n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);//createAccount and also get logged-in\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);//log in\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    \n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return(<>\n       <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" value={password}  onChange={onChange}    className=\"authInput\"/>\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}  className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n    </form>\n    <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Create Account\" : \"Sign In\" }</span>\n    </>)\n}\nexport default Authform;","import Authform from 'components/Authfrom';\nimport { authService, firebaseInstance } from 'fBase';\nimport React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Auth = () => {\n \n    const onSocialClick = async (event) => {\n        const {\n        target:{name}\n        } = event;\n        let provider;\n        if (name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n    return (\n        <div className=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n            <Authform/>\n            <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n     );\n} //function component\nexport default Auth;","import { dbService, storageService } from 'fBase';\nimport PropTypes from 'prop-types';\nimport React,{useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  \n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentURL).delete(); // 절대 URL로 REF를 참조할 수 있음. 즉 저장한 파일의 URL로 reference 참조 가능\n        }\n\n    };\n    const toggleEditing = () => {\n        setEditing(prev => !prev);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n            await dbService.doc(`nweets/${nweetObj.id}`).update({\n                ...nweetObj,\n                text:newNweet\n            });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewNweet(value);\n    }\n    return (\n        <div className=\"nweet\">\n            {editing?\n                (<>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input type=\"text\" onChange={onChange} value={newNweet} placeholder=\"Edit your Nweet\" required autoFocus className=\"formInput\"/>\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n                </>)\n                   : (\n                    <>\n                      <h4>{nweetObj.text}</h4>\n                      {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} />}\n                        {isOwner && (\n                         <div class=\"nweet__actions\">\n                          <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash} />\n                        </span>\n                        <span onClick={toggleEditing}>\n                            <FontAwesomeIcon icon={faPencilAlt} />\n                        </span>\n                        </div> \n                      )}\n                    </>\n                  )}\n    </div>\n  );\n};\nexport default Nweet;","\nimport { storageService, dbService } from \"fBase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n          }\n        let attachmentURL = \"\";\n        if (attachment !== \"\") {\n            event.preventDefault();\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`) //사용자 아이디경로 밑에 고유 uuid 파일명을 가짐\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentURL = await response.ref.getDownloadURL();\n         \n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorID: userObj.uid,\n            attachmentURL\n        }\n         // 이미지 파일 attachment가 존재한다면 파일을 저장\n       \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNweet(value);\n    }\n    const onFileChange = (event) => {\n        const { target: { files } } = event;\n        const file = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedevent) => {\n            const { target: { result } } = finishedevent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(file);\n    }\n    const onClearAttachment = () => {\n        setAttachment(\"\");\n        document.querySelector('input[type=\"file\"]').value = '';\n    }\n\n\n\n    return (\n         <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n            <input\n            className=\"factoryInput__input\"\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n            />\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                opacity: 0,\n                }}\n                />\n             {attachment && (\n            <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>);\n    };\n\n    export default NweetFactory;\n","import { dbService,storageService } from '../fBase';\nimport React, { useEffect, useState } from 'react';\nimport Nweet from 'components/Nweet';\nimport PropTypes from 'prop-types';\n\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n    \n    const [nweets, setNweets] = useState([]);\n    \n    useEffect(() => {\n        dbService.collection(\"nweets\").orderBy(\"createdAt\",\"desc\").onSnapshot(snapshot => { \n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setNweets(nweetArray);\n        })\n    }, [])\n    \n    \n    return (\n        <div className=\"container\">\n        <NweetFactory userObj={userObj}/>\n        <div style={{ marginTop: 30 }}>\n             {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorID === userObj.uid}\n          />\n        ))}\n        </div>\n    </div>\n    )\n};\n\n     //function component\nexport default Home;","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n            </li>\n            <li>\n            <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;","import { authService, dbService } from 'fBase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [myNweets, setMyNweets] = useState('');\n    const [newDisplayName, setNewDisplayName] = useState(userObj.DisplayName);\n    const onLogOutClick = async () => {\n        await authService.signOut();\n        history.push(\"/\");\n    }\n    const getMyNweets = async () => {\n        const nweets = await dbService.collection('nweets').where(\"creatorID\", \"==\", userObj.uid).orderBy('createdAt', \"asc\").get();\n      const nweetsArray = nweets.docs.map(doc => doc.data());\n      setMyNweets()\n    }\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.DisplayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName });\n        }\n        refreshUser();\n    }\n    return(\n        <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />     \n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n    );\n};\n        \n        \n        \n         //function component\nexport default Profile;","import { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport React from \"react\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\n\nconst Router = ({ isLoggedIn, userObj, refreshUser}) => {\n    console.log(isLoggedIn);\n   \n    return (\n        <HashRouter>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n            {isLoggedIn ? (<div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                    </div>\n                    ) : (\n                        <>\n                          <Route exact path=\"/\">\n                            <Auth />\n                          </Route>\n                        </>\n                      )}\n                    </Switch>\n                  </HashRouter>\n                );\n              };\nexport default Router;","import Router from \"components/Router\";\nimport React, { useEffect, useState } from \"react\";\nimport {authService}from \"fBase\";\nimport \"../styles.css\";\n// \n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => { // onauthstatechanged를 component가 mount될 때 한번만 쓰기 위해 useEffect를 씀\n    authService.onAuthStateChanged((user) => { //firebase 에서 로그인되거나 초기화가 되면 변화를 캐치하는 observer 메소드, 마운트되면 setInit을 하구 유저유무에 따라 setisLoggedin을 함\n      user? setUserObj(user): setUserObj(null);\n      \n      setInit(true);\n    })\n  }, []); //\n  const refreshUser = () => {\n    console.log(authService.currentUser.displayName);\n    setUserObj({ ...authService.currentUser }); // authService.currentUser와 user는 같은 reference를 가리키며, 따라서 새로운 object를 생성해줘야 setState로 re-render함\n }\n  return (\n    <>\n      {init ? <Router refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n      <footer>&copy; Nwitter{new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport {authService} from \"fBase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}